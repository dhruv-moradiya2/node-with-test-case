name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write
      checks: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      - name: Run tests with coverage
        run: | 
          npm test
          ls -la 
          ls -la coverage

      - name: Extract coverage summary
        id: coverage_summary
        run: |
          # Grab the first file in coverageMap
          COVERAGE=$(jq -r '.coverageMap | to_entries[0].value' coverage/report.json)
          LINES=$(echo "$COVERAGE" | jq -r '.lines.pct')
          STATEMENTS=$(echo "$COVERAGE" | jq -r '.statements.pct')
          FUNCTIONS=$(echo "$COVERAGE" | jq -r '.functions.pct')
          BRANCHES=$(echo "$COVERAGE" | jq -r '.branches.pct')

          # Set environment variable for later steps
          echo "SUMMARY_REPORT=Lines: $LINES%, Statements: $STATEMENTS%, Functions: $FUNCTIONS%, Branches: $BRANCHES%" >> $GITHUB_ENV

          # Write to workflow summary
          echo "## Jest Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Lines coverage: $LINES%" >> $GITHUB_STEP_SUMMARY
          echo "- Statements coverage: $STATEMENTS%" >> $GITHUB_STEP_SUMMARY
          echo "- Functions coverage: $FUNCTIONS%" >> $GITHUB_STEP_SUMMARY
          echo "- Branches coverage: $BRANCHES%" >> $GITHUB_STEP_SUMMARY
          echo "- Coverage folder: \`coverage/\`" >> $GITHUB_STEP_SUMMARY

      - name: Show summary report
        run: |
          echo "The coverage summary is: $SUMMARY_REPORT"

      - name: Upload coverage folder
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage
